@model Portal.Models.Commodity

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/LayoutForAdmin.cshtml";
}
<br /><br />
<h2>Create</h2>
@using (Html.BeginForm("Create", "Commodities", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <br />
        <h4>Commodity</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CommodityName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.CommodityName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CommodityName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubCategoryId, "SubCategory", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownList("SubCategoryId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SubCategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ManufacturerId, "Manufacturer", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownList("ManufacturerId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ManufacturerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.SubPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SubPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DiscountPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.DiscountPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DiscountPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MakeCompany, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.MakeCompany, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MakeCompany, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Degree, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Degree, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Degree, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageData, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                <div>Upload new image: <input type="file" name="Image" /></div>
                @Html.ValidationMessageFor(model => model.ImageData, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsRecommended, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsRecommended)
                    @Html.ValidationMessageFor(model => model.IsRecommended, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ManufacturerDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.ManufacturerDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ManufacturerDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PromotionStartOn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.PromotionStartOn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PromotionStartOn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PromotionEndOn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.PromotionEndOn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PromotionEndOn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Component, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Component, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Component, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="hiddenHtml" style="display:none;">
            <div>
                Color:
                @Html.DropDownList("Color", null,"", htmlAttributes: new { Style = "width:100px; margin-right:20px;" })
                Size:
                @Html.TextBox("Size", null, htmlAttributes: new { Style = "width:100px;margin-right:20px;" })
                Quantity:
                @Html.TextBox("Quantity", null, new { Style = "width:100px; margin-right:20px;" })
                Capacity:
                @Html.TextBox("Capacity", null, new { Style = "width:100px; margin-right:20px;" })
                Image: 
                <input type="file" name="files" style="width:100px;"/>
                <a id="deleterow" class="deleterow" style="cursor:pointer">Delete</a>
                <br />
                <br />
            </div>
        </div>

        <hr />
        <a id="addrow" name="addrow" style="cursor:pointer">Add Commodity Details Info:</a>
        <div id="commoditytable">   </div>

        <br />
        <br />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script type="text/javascript">
    $("#addrow").click(function(){
        add();
    });

    function add() {
        var index = $("#commoditytable").children().length;
        var html = $("#hiddenHtml").html().replace('name="Color"', 'name="[' + index + '].Color"');
        html = html.replace('name="Size"', 'name="[' + index + '].Size"');
        html = html.replace('name="Quantity"', 'name="[' + index + '].Quantity"');
        html = html.replace('name="Capacity"', 'name="[' + index + '].Capacity"');
        $("#commoditytable").append(html);
    }



    function replace() {
        var index = 0;
        var divLength = $("#commoditytable").children().length;
        for (var i = 0; i < divLength; i++) {
            var childTable = $("#commoditytable").children().eq(i).children();
            childTable.eq(0).attr('name', '[' + index + '].Color');
            childTable.eq(1).attr('name', '[' + index + '].Size');
            childTable.eq(2).attr('name', '[' + index + '].Quantity');
            childTable.eq(3).attr('name', '[' + index + '].Capacity');
            index++;
        }

    }

    $("#commoditytable").on("click", ".deleterow", function () {
        $(this).parent().remove();
        replace();
    });

</script>