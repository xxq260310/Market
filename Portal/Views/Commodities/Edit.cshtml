@model Portal.Models.Commodity

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/LayoutForAdmin.cshtml";
}
@{
    var index = 0;
}

<script type="text/javascript">
    $(function () {
        $("#hiddenHtml").children().children().eq(1).attr("value", "");
    })
    
</script>
<br /><br />
<h2>Edit</h2>
@using (Html.BeginForm("Edit", "Commodities", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <br />
        <h4>Commodity</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CommodityId)

        <div class="form-group">
            @Html.LabelFor(model => model.CommodityName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.CommodityName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CommodityName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubCategoryId, "SubCategory", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownList("SubCategoryId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SubCategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ManufacturerId, "Manufacturer", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownList("ManufacturerId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ManufacturerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.SubPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SubPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DiscountPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.DiscountPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DiscountPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MakeCompany, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.MakeCompany, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MakeCompany, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Degree, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Degree, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Degree, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

          <div class="form-group">
                @Html.LabelFor(model => model.ImageData, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    <img width="150" height="150" src="@Url.Action("GetImageByCommodityId", "Commodities", new { id = Model.CommodityId })"/>
                    @Html.HiddenFor(model => model.ImageData)
                    <div>Upload new image: <input type="file" name="image" /></div>
                    @Html.ValidationMessageFor(model => model.ImageData, "", new { @class = "text-danger" })
                </div>
            </div>

        @Html.HiddenFor(model => model.ImageType)

        <div class="form-group">
            @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsRecommended, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsRecommended)
                    @Html.ValidationMessageFor(model => model.IsRecommended, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ManufacturerDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.ManufacturerDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ManufacturerDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PromotionStartOn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.PromotionStartOn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PromotionStartOn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PromotionEndOn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.PromotionEndOn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PromotionEndOn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Component, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Component, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Component, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="hiddenHtml" style="display:none;">
            <div>
                Color:
                @Html.DropDownList("Color", null,"", htmlAttributes: new { Style = "width:100px; margin-right:20px;" })
                Quantity:
                @Html.TextBox("Quantity", null, new { Style = "width:100px; margin-right:20px;" })
                Size:
                @Html.TextBox("Size", null, new { Style = "width:100px; margin-right:20px;" })
                Capacity:
                @Html.TextBox("Capacity", null, new { Style = "width:100px; margin-right:20px;" })
                Image: 
                <input type="file" name="imageFiles" width="100" required />
                <a id="deleterow" class="deleterow" style="cursor:pointer">Delete</a>
                <br />
                <br />
            </div>
        </div>

        <h4>CommodityInfo:</h4>

        <div id="commoditytable">
            @foreach (var item in ViewBag.SelectedCommodity)
            {
                <div>
                    Color:
                    @Html.DropDownList("[" + index + "].Color", item.Color as SelectList, "",htmlAttributes: new { Style = "width:100px; margin-right:20px;" })
                    Quantity:
                    @Html.TextBox("[" + index + "].Quantity", (int)item.Quantity, new { Style = "width:100px; margin-right:20px;" })
                    Size:
                    @Html.TextBox("[" + index + "].Size", item.Size as string, new { Style = "width:100px; margin-right:20px;" })
                    Capacity:
                    @Html.TextBox("[" + index + "].Capacity", item.Capacity as string, new { Style = "width:100px; margin-right:20px;" })
                    Image:
                    <img width="100" src="@Url.Action("GetImageByCommodityInfoId", "Commodities", new { id = item.CommodityInfoId })" name='[@index].CommodityImage' /> 
                    <input type="file" name="imageFiles" width="100" />
                    <a id="deleterow" class="deleterow" style="cursor:pointer">Delete</a>
                    <br />
                    <br />
                </div>
                index++;
            }
        </div>
        <br />
        <a id="addrow" name="addrow" style="cursor:pointer">Add Commodity Info:</a>
        <br />
        <br />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Cancel and return to List", "Index")
</div>

<script type="text/javascript">
    $("#addrow").click(function(){
        add();
    });

    function add() {
        var index = $("#commoditytable").children().length;
        var html = $("#hiddenHtml").html().replace('name="Color"', 'name="[' + index + '].Color"');
        html = html.replace('name="Size"', 'name="[' + index + '].Size"');
        html = html.replace('name="Quantity"', 'name="[' + index + '].Quantity"');
        html = html.replace('name="Capacity"', 'name="[' + index + '].Capacity"');
        $("#commoditytable").append(html);
    }



    function replace() {
        var index = 0;
        var divLength = $("#commoditytable").children().length;
        for (var i = 0; i < divLength; i++) {
            var childTable = $("#commoditytable").children().eq(i).children();
            childTable.eq(0).attr('name', '[' + index + '].Color');
            childTable.eq(2).attr('name', '[' + index + '].Size');
            childTable.eq(1).attr('name', '[' + index + '].Quantity');
            childTable.eq(3).attr('name', '[' + index + '].Capacity');
            index++;
        }

    }

    $("#commoditytable").on("click", ".deleterow", function () {
        $(this).parent().remove();
        replace();
    });

</script>